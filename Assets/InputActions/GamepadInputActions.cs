//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputActions/GamepadInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GamepadInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GamepadInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GamepadInputActions"",
    ""maps"": [
        {
            ""name"": ""ZombieBotSelection"",
            ""id"": ""73c7c3df-1e40-4352-96da-9e047a420697"",
            ""actions"": [
                {
                    ""name"": ""New Zombie Bot Selection"",
                    ""type"": ""Button"",
                    ""id"": ""9c0e1dc1-70b3-46fc-86a2-bdcf43fa0d8f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Choose Zombie Bot Selection"",
                    ""type"": ""Button"",
                    ""id"": ""d3fbe9a0-ae91-483a-b81d-aae1d97786c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""65362284-fea6-482e-8313-234d32d7b3a2"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79e40831-a292-4b6f-b66c-5463a2772c66"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""909b67b9-69d7-44e8-b0cf-2b7de2fc2cc8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dd09d8e-cb33-4a8c-8277-078dc4dadda2"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b24fab03-de81-4eac-ad4f-ae73ae59fd4e"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32c76d72-b3ea-4a1c-968c-a50e715b7bf7"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7de215dd-e5b5-4579-9f6d-3ef9ba87c28f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Choose Zombie Bot Selection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ZombieBotGameplay"",
            ""id"": ""9889762f-0fbf-4d04-b6d0-670e668c94a5"",
            ""actions"": [
                {
                    ""name"": ""TogglePerspective"",
                    ""type"": ""Button"",
                    ""id"": ""ed0fcfc8-0105-4ece-b349-4335fd1500ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c4cb7c59-e9e3-4e18-bd39-1c4e6759a6c0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""aca01b72-ff80-44f1-a6fb-a132ac46352d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""591bdcb2-8163-41f7-b9cd-9f9bcd1d718f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scream"",
                    ""type"": ""Button"",
                    ""id"": ""25ab2073-6c7d-4057-8b77-99086a9b0a28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f26db3cb-e105-4c62-88f7-ea1247ee095c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2b62c30-db41-4694-8831-5e352df15c05"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePerspective"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8d96c1f6-c430-4999-b5f0-079577e151ac"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c34d3c7-fcc8-4772-8ddd-8253c0aac747"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""00af82db-65c3-443b-8a3b-b9e924854e83"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""adc8cb2a-bdbc-4463-acbe-34cb6c06c153"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""30711932-f45d-4ca6-aea8-85d79565fa18"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0cc50bb8-c28a-46fb-be3a-1dcf1203610b"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e26fbd57-5917-480f-bc34-4c40476345a9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scream"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ZombieBotSelection
        m_ZombieBotSelection = asset.FindActionMap("ZombieBotSelection", throwIfNotFound: true);
        m_ZombieBotSelection_NewZombieBotSelection = m_ZombieBotSelection.FindAction("New Zombie Bot Selection", throwIfNotFound: true);
        m_ZombieBotSelection_ChooseZombieBotSelection = m_ZombieBotSelection.FindAction("Choose Zombie Bot Selection", throwIfNotFound: true);
        // ZombieBotGameplay
        m_ZombieBotGameplay = asset.FindActionMap("ZombieBotGameplay", throwIfNotFound: true);
        m_ZombieBotGameplay_TogglePerspective = m_ZombieBotGameplay.FindAction("TogglePerspective", throwIfNotFound: true);
        m_ZombieBotGameplay_Move = m_ZombieBotGameplay.FindAction("Move", throwIfNotFound: true);
        m_ZombieBotGameplay_Run = m_ZombieBotGameplay.FindAction("Run", throwIfNotFound: true);
        m_ZombieBotGameplay_Attack = m_ZombieBotGameplay.FindAction("Attack", throwIfNotFound: true);
        m_ZombieBotGameplay_Scream = m_ZombieBotGameplay.FindAction("Scream", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ZombieBotSelection
    private readonly InputActionMap m_ZombieBotSelection;
    private List<IZombieBotSelectionActions> m_ZombieBotSelectionActionsCallbackInterfaces = new List<IZombieBotSelectionActions>();
    private readonly InputAction m_ZombieBotSelection_NewZombieBotSelection;
    private readonly InputAction m_ZombieBotSelection_ChooseZombieBotSelection;
    public struct ZombieBotSelectionActions
    {
        private @GamepadInputActions m_Wrapper;
        public ZombieBotSelectionActions(@GamepadInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @NewZombieBotSelection => m_Wrapper.m_ZombieBotSelection_NewZombieBotSelection;
        public InputAction @ChooseZombieBotSelection => m_Wrapper.m_ZombieBotSelection_ChooseZombieBotSelection;
        public InputActionMap Get() { return m_Wrapper.m_ZombieBotSelection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ZombieBotSelectionActions set) { return set.Get(); }
        public void AddCallbacks(IZombieBotSelectionActions instance)
        {
            if (instance == null || m_Wrapper.m_ZombieBotSelectionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ZombieBotSelectionActionsCallbackInterfaces.Add(instance);
            @NewZombieBotSelection.started += instance.OnNewZombieBotSelection;
            @NewZombieBotSelection.performed += instance.OnNewZombieBotSelection;
            @NewZombieBotSelection.canceled += instance.OnNewZombieBotSelection;
            @ChooseZombieBotSelection.started += instance.OnChooseZombieBotSelection;
            @ChooseZombieBotSelection.performed += instance.OnChooseZombieBotSelection;
            @ChooseZombieBotSelection.canceled += instance.OnChooseZombieBotSelection;
        }

        private void UnregisterCallbacks(IZombieBotSelectionActions instance)
        {
            @NewZombieBotSelection.started -= instance.OnNewZombieBotSelection;
            @NewZombieBotSelection.performed -= instance.OnNewZombieBotSelection;
            @NewZombieBotSelection.canceled -= instance.OnNewZombieBotSelection;
            @ChooseZombieBotSelection.started -= instance.OnChooseZombieBotSelection;
            @ChooseZombieBotSelection.performed -= instance.OnChooseZombieBotSelection;
            @ChooseZombieBotSelection.canceled -= instance.OnChooseZombieBotSelection;
        }

        public void RemoveCallbacks(IZombieBotSelectionActions instance)
        {
            if (m_Wrapper.m_ZombieBotSelectionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IZombieBotSelectionActions instance)
        {
            foreach (var item in m_Wrapper.m_ZombieBotSelectionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ZombieBotSelectionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ZombieBotSelectionActions @ZombieBotSelection => new ZombieBotSelectionActions(this);

    // ZombieBotGameplay
    private readonly InputActionMap m_ZombieBotGameplay;
    private List<IZombieBotGameplayActions> m_ZombieBotGameplayActionsCallbackInterfaces = new List<IZombieBotGameplayActions>();
    private readonly InputAction m_ZombieBotGameplay_TogglePerspective;
    private readonly InputAction m_ZombieBotGameplay_Move;
    private readonly InputAction m_ZombieBotGameplay_Run;
    private readonly InputAction m_ZombieBotGameplay_Attack;
    private readonly InputAction m_ZombieBotGameplay_Scream;
    public struct ZombieBotGameplayActions
    {
        private @GamepadInputActions m_Wrapper;
        public ZombieBotGameplayActions(@GamepadInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TogglePerspective => m_Wrapper.m_ZombieBotGameplay_TogglePerspective;
        public InputAction @Move => m_Wrapper.m_ZombieBotGameplay_Move;
        public InputAction @Run => m_Wrapper.m_ZombieBotGameplay_Run;
        public InputAction @Attack => m_Wrapper.m_ZombieBotGameplay_Attack;
        public InputAction @Scream => m_Wrapper.m_ZombieBotGameplay_Scream;
        public InputActionMap Get() { return m_Wrapper.m_ZombieBotGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ZombieBotGameplayActions set) { return set.Get(); }
        public void AddCallbacks(IZombieBotGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_ZombieBotGameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ZombieBotGameplayActionsCallbackInterfaces.Add(instance);
            @TogglePerspective.started += instance.OnTogglePerspective;
            @TogglePerspective.performed += instance.OnTogglePerspective;
            @TogglePerspective.canceled += instance.OnTogglePerspective;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Scream.started += instance.OnScream;
            @Scream.performed += instance.OnScream;
            @Scream.canceled += instance.OnScream;
        }

        private void UnregisterCallbacks(IZombieBotGameplayActions instance)
        {
            @TogglePerspective.started -= instance.OnTogglePerspective;
            @TogglePerspective.performed -= instance.OnTogglePerspective;
            @TogglePerspective.canceled -= instance.OnTogglePerspective;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Scream.started -= instance.OnScream;
            @Scream.performed -= instance.OnScream;
            @Scream.canceled -= instance.OnScream;
        }

        public void RemoveCallbacks(IZombieBotGameplayActions instance)
        {
            if (m_Wrapper.m_ZombieBotGameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IZombieBotGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_ZombieBotGameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ZombieBotGameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ZombieBotGameplayActions @ZombieBotGameplay => new ZombieBotGameplayActions(this);
    public interface IZombieBotSelectionActions
    {
        void OnNewZombieBotSelection(InputAction.CallbackContext context);
        void OnChooseZombieBotSelection(InputAction.CallbackContext context);
    }
    public interface IZombieBotGameplayActions
    {
        void OnTogglePerspective(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnScream(InputAction.CallbackContext context);
    }
}
